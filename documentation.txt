Food Ordering App - MERN stack



Backend setup

-create folders backend and frontend
-enter folder backend and type command npm init -y
-type command: npm i express cors dotenv mongodb mongoose
-type command: npm i --save-dev ts-node typescript nodemon @types/express @types/cors @types/node
-in package.json file update object scripts
-type command: npx tsc --init
-create folder src and index.ts file
-in index.ts file add basic Node.js Express setup
-create files .env and .env.example
-type command: npm run dev
-update package.json file with "type": "module"
-create nodemon.json file
-update tsconfig.ts file
-open route: http://localhost:3000


Frontend setup

-open link: https://ui.shadcn.com
-open link: https://ui.shadcn.com/docs/installation/vite
-type command: cd frontend 
-in folder frontend type commands from documentation
-remove App.css file
-update component App.tsx
-create folder .vscode and settings.json file
-type command: npm run dev
-open route: http://localhost:5173


Database setup

-open link: https://www.mongodb.com/products/platform/atlas-database
-create new database
-in folder backend, in .env file create variable MONGODB_CONNECTION_STRING
-in index.ts file import object mongoose form package mongoose
-invoke function mongoose.connect()
-open link: https://www.npmjs.com/package/chalk
-type command: npm i chalk
-create folder database and connect.ts file
-in connect.ts file create and export async function connectDB()
-in index.ts file import and invoke function connectDB()
-open route: http://localhost:3000


React Router setup

-open link: https://reactrouter.com
-open link: https://www.npmjs.com/package/react-router-dom
-type command: cd frontend 
-type command: npm i react-router-dom
-in component main.tsx import component BrowserRouter as Router
-in tsx add component Router
-create component AppRoutes.tsx
-in component AppRoutes.tsx import components Routes, Route and Navigate from package react-router-dom
-in component main.tsx import component AppRoutes from component AppRoutes.tsx
-in component Router add component AppRoutes
-open route: http://localhost:5173
-open route: http://localhost:5173/user-profile
-open route: http://localhost:5173/test


Layout and header

-create folder Layouts and component layout.tsx
-in component layout.tsx create HTML elements with Tailwind CSS classes
-create folder shared and component Header.tsx
-in component Header.tsx create HTML elements with Tailwind CSS classes
-import component Link from package react-router-dom
-in component layout.tsx import component Header from component Header.tsx
-open route: http://localhost:5173


Mobile nav

-open link: https://ui.shadcn.com/docs/components/sheet
-type command: npx shadcn@latest add sheet
-open link: https://lucide.dev/guide/packages/lucide-react
-type command: npm i lucide-react
-open link: https://ui.shadcn.com/docs/components/separator
-type command: npx shadcn@latest add separator
-in folder shared create component MobileNav.tsx
-in component MobileNav.tsx import components from component sheet.tsx
-in component Header.tsx import component MobileNav from component MobileNav.tsx
-open route: http://localhost:5173


Desktop nav

-in folder shared create folder MainNav.tsx
-in component Header.tsx import component MainNav from component MainNav.tsx
-open route: http://localhost:5173


Responsive landing page

-in folder shared create component Hero.tsx 
-in folder assets add three images
-in component layout.tsx import component Hero from component Hero.tsx
-create folder pages and component HomePage.tsx
-in component HomePage.tsx create HTML elements with Tailwind CSS classes
-in component AppRoutes.tsx import component HomePage from component HomePage.tsx
-in folder shared create component Footer.tsx
-in component layout.tsx import component Footer from component Footer.tsx
-open route: http://localhost:5173